syntax = "proto3";

package api.v1;

import "common/v1/types.proto";
import "common/v1/status.proto";
import "google/api/annotations.proto";

option go_package = "github.com/example/backend/generated/go/api/v1";

// Authentication API for frontend
// REST endpoints for user authentication

service AuthAPIService {
  // Login with email/password
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
  }

  // Logout current session
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/logout"
      body: "*"
    };
  }

  // Refresh authentication token
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/refresh"
      body: "*"
    };
  }

  // Get current user session
  rpc GetSession(GetSessionRequest) returns (GetSessionResponse) {
    option (google.api.http) = {
      get: "/api/v1/auth/session"
    };
  }
}

message LoginRequest {
  string email = 1;
  string password = 2;
  bool remember_me = 3;
}

message LoginResponse {
  common.v1.ResponseStatus status = 1;
  string access_token = 2;
  string refresh_token = 3;
  int64 expires_at = 4;
  common.v1.User user = 5;
  common.v1.ErrorDetails error = 6;
}

message LogoutRequest {
  string access_token = 1;
}

message LogoutResponse {
  common.v1.ResponseStatus status = 1;
  bool success = 2;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  common.v1.ResponseStatus status = 1;
  string access_token = 2;
  string refresh_token = 3;
  int64 expires_at = 4;
  common.v1.ErrorDetails error = 5;
}

message GetSessionRequest {}

message GetSessionResponse {
  bool authenticated = 1;
  common.v1.User user = 2;
  int64 expires_at = 3;
}