// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: example/v1/person.proto
// Protobuf C++ Version: 6.30.2

#ifndef example_2fv1_2fperson_2eproto_2epb_2eh
#define example_2fv1_2fperson_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_example_2fv1_2fperson_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_example_2fv1_2fperson_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_example_2fv1_2fperson_2eproto;
}  // extern "C"
namespace example {
namespace v1 {
enum Person_PhoneType : int;
extern const uint32_t Person_PhoneType_internal_data_[];
class AddressBook;
struct AddressBookDefaultTypeInternal;
extern AddressBookDefaultTypeInternal _AddressBook_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AddressBook_class_data_;
class Person;
struct PersonDefaultTypeInternal;
extern PersonDefaultTypeInternal _Person_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Person_class_data_;
class Person_PhoneNumber;
struct Person_PhoneNumberDefaultTypeInternal;
extern Person_PhoneNumberDefaultTypeInternal _Person_PhoneNumber_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Person_PhoneNumber_class_data_;
}  // namespace v1
}  // namespace example
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::example::v1::Person_PhoneType_internal_data_>
    internal::EnumTraitsImpl::value<::example::v1::Person_PhoneType>;
}  // namespace protobuf
}  // namespace google

namespace example {
namespace v1 {
enum Person_PhoneType : int {
  Person_PhoneType_PHONE_TYPE_UNSPECIFIED = 0,
  Person_PhoneType_MOBILE = 1,
  Person_PhoneType_HOME = 2,
  Person_PhoneType_WORK = 3,
  Person_PhoneType_Person_PhoneType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Person_PhoneType_Person_PhoneType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Person_PhoneType_internal_data_[];
inline constexpr Person_PhoneType Person_PhoneType_PhoneType_MIN =
    static_cast<Person_PhoneType>(0);
inline constexpr Person_PhoneType Person_PhoneType_PhoneType_MAX =
    static_cast<Person_PhoneType>(3);
inline bool Person_PhoneType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int Person_PhoneType_PhoneType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Person_PhoneType_descriptor();
template <typename T>
const std::string& Person_PhoneType_Name(T value) {
  static_assert(std::is_same<T, Person_PhoneType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PhoneType_Name().");
  return Person_PhoneType_Name(static_cast<Person_PhoneType>(value));
}
template <>
inline const std::string& Person_PhoneType_Name(Person_PhoneType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Person_PhoneType_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool Person_PhoneType_Parse(
    absl::string_view name, Person_PhoneType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Person_PhoneType>(Person_PhoneType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class Person_PhoneNumber final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:example.v1.Person.PhoneNumber) */ {
 public:
  inline Person_PhoneNumber() : Person_PhoneNumber(nullptr) {}
  ~Person_PhoneNumber() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Person_PhoneNumber* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Person_PhoneNumber));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Person_PhoneNumber(::google::protobuf::internal::ConstantInitialized);

  inline Person_PhoneNumber(const Person_PhoneNumber& from) : Person_PhoneNumber(nullptr, from) {}
  inline Person_PhoneNumber(Person_PhoneNumber&& from) noexcept
      : Person_PhoneNumber(nullptr, std::move(from)) {}
  inline Person_PhoneNumber& operator=(const Person_PhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline Person_PhoneNumber& operator=(Person_PhoneNumber&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Person_PhoneNumber& default_instance() {
    return *reinterpret_cast<const Person_PhoneNumber*>(
        &_Person_PhoneNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Person_PhoneNumber& a, Person_PhoneNumber& b) { a.Swap(&b); }
  inline void Swap(Person_PhoneNumber* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Person_PhoneNumber* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Person_PhoneNumber* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Person_PhoneNumber>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Person_PhoneNumber& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Person_PhoneNumber& from) { Person_PhoneNumber::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Person_PhoneNumber* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "example.v1.Person.PhoneNumber"; }

 protected:
  explicit Person_PhoneNumber(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Person_PhoneNumber(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Person_PhoneNumber& from);
  Person_PhoneNumber(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Person_PhoneNumber&& from) noexcept
      : Person_PhoneNumber(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumberFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string number = 1;
  void clear_number() ;
  const std::string& number() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_number(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_number();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_number();
  void set_allocated_number(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_number() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_number(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_number();

  public:
  // .example.v1.Person.PhoneType type = 2;
  void clear_type() ;
  ::example::v1::Person_PhoneType type() const;
  void set_type(::example::v1::Person_PhoneType value);

  private:
  ::example::v1::Person_PhoneType _internal_type() const;
  void _internal_set_type(::example::v1::Person_PhoneType value);

  public:
  // @@protoc_insertion_point(class_scope:example.v1.Person.PhoneNumber)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Person_PhoneNumber& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr number_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_example_2fv1_2fperson_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Person_PhoneNumber_class_data_;
// -------------------------------------------------------------------

class Person final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:example.v1.Person) */ {
 public:
  inline Person() : Person(nullptr) {}
  ~Person() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Person* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Person));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Person(::google::protobuf::internal::ConstantInitialized);

  inline Person(const Person& from) : Person(nullptr, from) {}
  inline Person(Person&& from) noexcept
      : Person(nullptr, std::move(from)) {}
  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }
  inline Person& operator=(Person&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Person& default_instance() {
    return *reinterpret_cast<const Person*>(
        &_Person_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Person& a, Person& b) { a.Swap(&b); }
  inline void Swap(Person* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Person* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Person* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Person>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Person& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Person& from) { Person::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Person* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "example.v1.Person"; }

 protected:
  explicit Person(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Person(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Person& from);
  Person(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Person&& from) noexcept
      : Person(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PhoneNumber = Person_PhoneNumber;
  using PhoneType = Person_PhoneType;
  static constexpr PhoneType PHONE_TYPE_UNSPECIFIED = Person_PhoneType_PHONE_TYPE_UNSPECIFIED;
  static constexpr PhoneType MOBILE = Person_PhoneType_MOBILE;
  static constexpr PhoneType HOME = Person_PhoneType_HOME;
  static constexpr PhoneType WORK = Person_PhoneType_WORK;
  static inline bool PhoneType_IsValid(int value) {
    return Person_PhoneType_IsValid(value);
  }
  static constexpr PhoneType PhoneType_MIN = Person_PhoneType_PhoneType_MIN;
  static constexpr PhoneType PhoneType_MAX = Person_PhoneType_PhoneType_MAX;
  static constexpr int PhoneType_ARRAYSIZE = Person_PhoneType_PhoneType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PhoneType_descriptor() {
    return Person_PhoneType_descriptor();
  }
  template <typename T>
  static inline const std::string& PhoneType_Name(T value) {
    return Person_PhoneType_Name(value);
  }
  static inline bool PhoneType_Parse(
      absl::string_view name, PhoneType* PROTOBUF_NONNULL value) {
    return Person_PhoneType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPhonesFieldNumber = 4,
    kNameFieldNumber = 1,
    kEmailFieldNumber = 3,
    kLastUpdatedFieldNumber = 5,
    kIdFieldNumber = 2,
  };
  // repeated .example.v1.Person.PhoneNumber phones = 4;
  int phones_size() const;
  private:
  int _internal_phones_size() const;

  public:
  void clear_phones() ;
  ::example::v1::Person_PhoneNumber* PROTOBUF_NONNULL mutable_phones(int index);
  ::google::protobuf::RepeatedPtrField<::example::v1::Person_PhoneNumber>* PROTOBUF_NONNULL mutable_phones();

  private:
  const ::google::protobuf::RepeatedPtrField<::example::v1::Person_PhoneNumber>& _internal_phones() const;
  ::google::protobuf::RepeatedPtrField<::example::v1::Person_PhoneNumber>* PROTOBUF_NONNULL _internal_mutable_phones();
  public:
  const ::example::v1::Person_PhoneNumber& phones(int index) const;
  ::example::v1::Person_PhoneNumber* PROTOBUF_NONNULL add_phones();
  const ::google::protobuf::RepeatedPtrField<::example::v1::Person_PhoneNumber>& phones() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string email = 3;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_email();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_email();
  void set_allocated_email(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_email() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_email(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_email();

  public:
  // .google.protobuf.Timestamp last_updated = 5;
  bool has_last_updated() const;
  void clear_last_updated() ;
  const ::google::protobuf::Timestamp& last_updated() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_last_updated();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_last_updated();
  void set_allocated_last_updated(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_last_updated(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_last_updated();

  private:
  const ::google::protobuf::Timestamp& _internal_last_updated() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_last_updated();

  public:
  // int32 id = 2;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:example.v1.Person)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 35,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Person& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::example::v1::Person_PhoneNumber > phones_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE last_updated_;
    ::int32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_example_2fv1_2fperson_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Person_class_data_;
// -------------------------------------------------------------------

class AddressBook final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:example.v1.AddressBook) */ {
 public:
  inline AddressBook() : AddressBook(nullptr) {}
  ~AddressBook() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddressBook* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddressBook));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressBook(::google::protobuf::internal::ConstantInitialized);

  inline AddressBook(const AddressBook& from) : AddressBook(nullptr, from) {}
  inline AddressBook(AddressBook&& from) noexcept
      : AddressBook(nullptr, std::move(from)) {}
  inline AddressBook& operator=(const AddressBook& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressBook& operator=(AddressBook&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressBook& default_instance() {
    return *reinterpret_cast<const AddressBook*>(
        &_AddressBook_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AddressBook& a, AddressBook& b) { a.Swap(&b); }
  inline void Swap(AddressBook* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressBook* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressBook* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddressBook>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressBook& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressBook& from) { AddressBook::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddressBook* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "example.v1.AddressBook"; }

 protected:
  explicit AddressBook(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AddressBook(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AddressBook& from);
  AddressBook(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AddressBook&& from) noexcept
      : AddressBook(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeopleFieldNumber = 1,
  };
  // repeated .example.v1.Person people = 1;
  int people_size() const;
  private:
  int _internal_people_size() const;

  public:
  void clear_people() ;
  ::example::v1::Person* PROTOBUF_NONNULL mutable_people(int index);
  ::google::protobuf::RepeatedPtrField<::example::v1::Person>* PROTOBUF_NONNULL mutable_people();

  private:
  const ::google::protobuf::RepeatedPtrField<::example::v1::Person>& _internal_people() const;
  ::google::protobuf::RepeatedPtrField<::example::v1::Person>* PROTOBUF_NONNULL _internal_mutable_people();
  public:
  const ::example::v1::Person& people(int index) const;
  ::example::v1::Person* PROTOBUF_NONNULL add_people();
  const ::google::protobuf::RepeatedPtrField<::example::v1::Person>& people() const;
  // @@protoc_insertion_point(class_scope:example.v1.AddressBook)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AddressBook& from_msg);
    ::google::protobuf::RepeatedPtrField< ::example::v1::Person > people_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_example_2fv1_2fperson_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AddressBook_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Person_PhoneNumber

// string number = 1;
inline void Person_PhoneNumber::clear_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Person_PhoneNumber::number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.v1.Person.PhoneNumber.number)
  return _internal_number();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Person_PhoneNumber::set_number(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.number_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:example.v1.Person.PhoneNumber.number)
}
inline std::string* PROTOBUF_NONNULL Person_PhoneNumber::mutable_number()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_number();
  // @@protoc_insertion_point(field_mutable:example.v1.Person.PhoneNumber.number)
  return _s;
}
inline const std::string& Person_PhoneNumber::_internal_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_.Get();
}
inline void Person_PhoneNumber::_internal_set_number(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.number_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Person_PhoneNumber::_internal_mutable_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.number_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Person_PhoneNumber::release_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:example.v1.Person.PhoneNumber.number)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.number_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.number_.Set("", GetArena());
  }
  return released;
}
inline void Person_PhoneNumber::set_allocated_number(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.number_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.number_.IsDefault()) {
    _impl_.number_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:example.v1.Person.PhoneNumber.number)
}

// .example.v1.Person.PhoneType type = 2;
inline void Person_PhoneNumber::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::example::v1::Person_PhoneType Person_PhoneNumber::type() const {
  // @@protoc_insertion_point(field_get:example.v1.Person.PhoneNumber.type)
  return _internal_type();
}
inline void Person_PhoneNumber::set_type(::example::v1::Person_PhoneType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:example.v1.Person.PhoneNumber.type)
}
inline ::example::v1::Person_PhoneType Person_PhoneNumber::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::example::v1::Person_PhoneType>(_impl_.type_);
}
inline void Person_PhoneNumber::_internal_set_type(::example::v1::Person_PhoneType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// Person

// string name = 1;
inline void Person::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Person::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.v1.Person.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Person::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:example.v1.Person.name)
}
inline std::string* PROTOBUF_NONNULL Person::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:example.v1.Person.name)
  return _s;
}
inline const std::string& Person::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Person::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Person::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Person::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:example.v1.Person.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Person::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:example.v1.Person.name)
}

// int32 id = 2;
inline void Person::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t Person::id() const {
  // @@protoc_insertion_point(field_get:example.v1.Person.id)
  return _internal_id();
}
inline void Person::set_id(::int32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:example.v1.Person.id)
}
inline ::int32_t Person::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Person::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string email = 3;
inline void Person::clear_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Person::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.v1.Person.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Person::set_email(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:example.v1.Person.email)
}
inline std::string* PROTOBUF_NONNULL Person::mutable_email()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:example.v1.Person.email)
  return _s;
}
inline const std::string& Person::_internal_email() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_.Get();
}
inline void Person::_internal_set_email(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Person::_internal_mutable_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Person::release_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:example.v1.Person.email)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.email_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.email_.Set("", GetArena());
  }
  return released;
}
inline void Person::set_allocated_email(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.email_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:example.v1.Person.email)
}

// repeated .example.v1.Person.PhoneNumber phones = 4;
inline int Person::_internal_phones_size() const {
  return _internal_phones().size();
}
inline int Person::phones_size() const {
  return _internal_phones_size();
}
inline void Person::clear_phones() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phones_.Clear();
}
inline ::example::v1::Person_PhoneNumber* PROTOBUF_NONNULL Person::mutable_phones(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:example.v1.Person.phones)
  return _internal_mutable_phones()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::example::v1::Person_PhoneNumber>* PROTOBUF_NONNULL Person::mutable_phones()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:example.v1.Person.phones)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_phones();
}
inline const ::example::v1::Person_PhoneNumber& Person::phones(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.v1.Person.phones)
  return _internal_phones().Get(index);
}
inline ::example::v1::Person_PhoneNumber* PROTOBUF_NONNULL Person::add_phones()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::example::v1::Person_PhoneNumber* _add = _internal_mutable_phones()->Add();
  // @@protoc_insertion_point(field_add:example.v1.Person.phones)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::example::v1::Person_PhoneNumber>& Person::phones() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:example.v1.Person.phones)
  return _internal_phones();
}
inline const ::google::protobuf::RepeatedPtrField<::example::v1::Person_PhoneNumber>&
Person::_internal_phones() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phones_;
}
inline ::google::protobuf::RepeatedPtrField<::example::v1::Person_PhoneNumber>* PROTOBUF_NONNULL
Person::_internal_mutable_phones() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.phones_;
}

// .google.protobuf.Timestamp last_updated = 5;
inline bool Person::has_last_updated() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_updated_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Person::_internal_last_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.last_updated_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Person::last_updated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.v1.Person.last_updated)
  return _internal_last_updated();
}
inline void Person::unsafe_arena_set_allocated_last_updated(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_);
  }
  _impl_.last_updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:example.v1.Person.last_updated)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Person::release_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.last_updated_;
  _impl_.last_updated_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Person::unsafe_arena_release_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:example.v1.Person.last_updated)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.last_updated_;
  _impl_.last_updated_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Person::_internal_mutable_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_updated_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.last_updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.last_updated_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Person::mutable_last_updated()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_last_updated();
  // @@protoc_insertion_point(field_mutable:example.v1.Person.last_updated)
  return _msg;
}
inline void Person::set_allocated_last_updated(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.last_updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:example.v1.Person.last_updated)
}

// -------------------------------------------------------------------

// AddressBook

// repeated .example.v1.Person people = 1;
inline int AddressBook::_internal_people_size() const {
  return _internal_people().size();
}
inline int AddressBook::people_size() const {
  return _internal_people_size();
}
inline void AddressBook::clear_people() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.people_.Clear();
}
inline ::example::v1::Person* PROTOBUF_NONNULL AddressBook::mutable_people(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:example.v1.AddressBook.people)
  return _internal_mutable_people()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::example::v1::Person>* PROTOBUF_NONNULL AddressBook::mutable_people()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:example.v1.AddressBook.people)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_people();
}
inline const ::example::v1::Person& AddressBook::people(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.v1.AddressBook.people)
  return _internal_people().Get(index);
}
inline ::example::v1::Person* PROTOBUF_NONNULL AddressBook::add_people()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::example::v1::Person* _add = _internal_mutable_people()->Add();
  // @@protoc_insertion_point(field_add:example.v1.AddressBook.people)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::example::v1::Person>& AddressBook::people() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:example.v1.AddressBook.people)
  return _internal_people();
}
inline const ::google::protobuf::RepeatedPtrField<::example::v1::Person>&
AddressBook::_internal_people() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.people_;
}
inline ::google::protobuf::RepeatedPtrField<::example::v1::Person>* PROTOBUF_NONNULL
AddressBook::_internal_mutable_people() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.people_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace example


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::example::v1::Person_PhoneType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::example::v1::Person_PhoneType>() {
  return ::example::v1::Person_PhoneType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // example_2fv1_2fperson_2eproto_2epb_2eh
