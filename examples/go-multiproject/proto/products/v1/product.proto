syntax = "proto3";

package products.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/example/multiproject/proto/gen/go/products/v1;productsv1";

message Product {
  string id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  string currency = 5;
  string sku = 6;
  int32 stock_quantity = 7;
  ProductCategory category = 8;
  repeated string tags = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
  ProductStatus status = 12;
}

message ProductCategory {
  string id = 1;
  string name = 2;
  string description = 3;
}

enum ProductStatus {
  PRODUCT_STATUS_UNSPECIFIED = 0;
  PRODUCT_STATUS_ACTIVE = 1;
  PRODUCT_STATUS_INACTIVE = 2;
  PRODUCT_STATUS_OUT_OF_STOCK = 3;
  PRODUCT_STATUS_DISCONTINUED = 4;
}

service ProductService {
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
  rpc SearchProducts(SearchProductsRequest) returns (SearchProductsResponse);
  rpc UpdateStock(UpdateStockRequest) returns (UpdateStockResponse);
}

message GetProductRequest {
  string id = 1;
}

message GetProductResponse {
  Product product = 1;
}

message CreateProductRequest {
  string name = 1;
  string description = 2;
  double price = 3;
  string currency = 4;
  string sku = 5;
  int32 stock_quantity = 6;
  ProductCategory category = 7;
  repeated string tags = 8;
}

message CreateProductResponse {
  Product product = 1;
}

message UpdateProductRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  string currency = 5;
  int32 stock_quantity = 6;
  ProductCategory category = 7;
  repeated string tags = 8;
  ProductStatus status = 9;
}

message UpdateProductResponse {
  Product product = 1;
}

message DeleteProductRequest {
  string id = 1;
}

message DeleteProductResponse {
  bool success = 1;
}

message ListProductsRequest {
  int32 page_size = 1;
  string page_token = 2;
  ProductStatus status_filter = 3;
  string category_id = 4;
}

message ListProductsResponse {
  repeated Product products = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

message SearchProductsRequest {
  string query = 1;
  int32 page_size = 2;
  string page_token = 3;
  repeated string tags = 4;
  string category_id = 5;
  double min_price = 6;
  double max_price = 7;
}

message SearchProductsResponse {
  repeated Product products = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

message UpdateStockRequest {
  string product_id = 1;
  int32 quantity_change = 2;
}

message UpdateStockResponse {
  Product product = 1;
}
