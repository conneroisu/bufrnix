syntax = "proto3";

package orders.v1;

import "google/protobuf/timestamp.proto";
import "products/v1/product.proto";
import "users/v1/user.proto";

option go_package = "github.com/example/multiproject/proto/gen/go/orders/v1;ordersv1";

message Order {
  string id = 1;
  string user_id = 2;
  repeated OrderItem items = 3;
  OrderStatus status = 4;
  double total_amount = 5;
  string currency = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
  ShippingAddress shipping_address = 9;
}

message OrderItem {
  string product_id = 1;
  int32 quantity = 2;
  double unit_price = 3;
  double total_price = 4;
}

message ShippingAddress {
  string street = 1;
  string city = 2;
  string state = 3;
  string postal_code = 4;
  string country = 5;
}

enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_PENDING = 1;
  ORDER_STATUS_CONFIRMED = 2;
  ORDER_STATUS_PROCESSING = 3;
  ORDER_STATUS_SHIPPED = 4;
  ORDER_STATUS_DELIVERED = 5;
  ORDER_STATUS_CANCELLED = 6;
  ORDER_STATUS_REFUNDED = 7;
}

service OrderService {
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
  rpc GetOrdersByUser(GetOrdersByUserRequest) returns (GetOrdersByUserResponse);
}

message GetOrderRequest {
  string id = 1;
}

message GetOrderResponse {
  Order order = 1;
}

message CreateOrderRequest {
  string user_id = 1;
  repeated OrderItem items = 2;
  ShippingAddress shipping_address = 3;
}

message CreateOrderResponse {
  Order order = 1;
}

message UpdateOrderStatusRequest {
  string id = 1;
  OrderStatus status = 2;
}

message UpdateOrderStatusResponse {
  Order order = 1;
}

message CancelOrderRequest {
  string id = 1;
  string reason = 2;
}

message CancelOrderResponse {
  bool success = 1;
}

message ListOrdersRequest {
  int32 page_size = 1;
  string page_token = 2;
  OrderStatus status_filter = 3;
}

message ListOrdersResponse {
  repeated Order orders = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

message GetOrdersByUserRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message GetOrdersByUserResponse {
  repeated Order orders = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}
