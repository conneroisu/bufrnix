// -----------------------------------------------------------------------------
// Text to Speech gRPC Service Definition (proto3)
// -----------------------------------------------------------------------------
//
// This file defines a gRPC AI inference service for generating text to speech
// audio data. The service allows clients to send a request to embed data and
// receive the corresponding embedding vectors.
//
// This service is part of the internal api of the pegwings platform.
// -----------------------------------------------------------------------------
//
// Note: This example uses proto3 syntax and is designed to be used with gRPC.
//       To compile this file, you would use the Protocol Buffers compiler
//       (protoc) along with the gRPC plugin for your target language.
//
// Copyright 2025 Pegwings All rights reserved.
// -----------------------------------------------------------------------------

syntax = "proto3";

package tts.v1;

// External
import "google/api/field_behavior.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "gateway/protoc-gen-openapiv2/annotations.proto";

option go_package = "github.com/conneroisu/bufrnix/examples/multilang-multi-project/proto/gen/go/tts/v1;tts";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info : {
    title : "Internal Text to Speech API"
    version : "1.0.0"
    description : "# Text to Speech\n\nThis service provides a gRPC API for "
                  "generating speech from text.\n\n It is part of the internal "
                  "api of the pegwings platform."
    contact : {
      name : "Conner Ohnsorge"
      url : "https://github.com/pegwings"
      email : "conneroisu@outlook.com"
    }
  }
};

// TTSService is the service for the TTS API.
service TTSService {
  // TTS creates speech from text.
  rpc TTS(TTSRequest) returns (TTSResponse) {
    option (google.api.http) = {
      post : "/v1/tts"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "Generate speech from text"
      description : "Generate speech from text"
      tags : "TTS"
    };
  }
  // HealthCheck returns the health of the service
  rpc HealthCheck(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get : "/v1/health"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "Health check"
      description : "Health check"
      tags : "Health,healthcheck"
    };
  }
}

// TTSResponse is the response message for the TTS method.
message TTSResponse {
  bytes text = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "The generated speech"
    }
  ];
}

// TTSRequest is the request message for the TTS method.
message TTSRequest {
  // The text to generate audio for. The maximum length is 4096 characters.
  string text = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "The text to generate audio for"
      min_length : 1
      max_length : 4096
    }
  ];
  // The model to use for generating audio. The default is "pinter".
  string model = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "The model to use for generating audio"
    }
  ];
  // The voice to use for generating audio. The default is "thamnes".
  string voice = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "The voice to use for generating audio"
    }
  ];
  // The speed to use for generating audio. The default is 1.0.
  optional float speed = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "The speed to use for generating audio"
    }
  ];
  // The format to use for generating audio. The default is "mp3".
  optional string response_format = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "The format to use for generating audio"
    }
  ];
}
