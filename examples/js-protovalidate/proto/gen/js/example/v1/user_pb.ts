// @generated by protoc-gen-es v2.5.0 with parameter "target=ts,target=ts"
// @generated from file example/v1/user.proto (package example.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file example/v1/user.proto.
 */
export const file_example_v1_user: GenFile = /*@__PURE__*/
  fileDesc("ChVleGFtcGxlL3YxL3VzZXIucHJvdG8SCmV4YW1wbGUudjEi9AEKBFVzZXISFAoCaWQYASABKAlCCLpIBXIDsAEBEhYKBWVtYWlsGAIgASgJQge6SARyAmABEiwKCHVzZXJuYW1lGAMgASgJQhq6SBdyFRADGBQyD15bYS16QS1aMC05X10rJBIWCgNhZ2UYBCABKAVCCbpIBhoEGHgoEhIwCgZzdGF0dXMYBSABKA4yFi5leGFtcGxlLnYxLlVzZXJTdGF0dXNCCLpIBYIBAhABEiAKBHRhZ3MYBiADKAlCErpID5IBDAgAEAoiBnIEEAEYMhIkCgdwcm9maWxlGAcgASgLMhMuZXhhbXBsZS52MS5Qcm9maWxlImUKB1Byb2ZpbGUSFQoDYmlvGAEgASgJQgi6SAVyAxj0AxIZCgd3ZWJzaXRlGAIgASgJQgi6SAVyA4gBARIoCgVwaG9uZRgDIAEoCUIZukgWchQyEl5cKz9bMS05XVxkezEsMTR9JCJ8ChFDcmVhdGVVc2VyUmVxdWVzdBImCgR1c2VyGAEgASgLMhAuZXhhbXBsZS52MS5Vc2VyQga6SAPIAQESPwoIcGFzc3dvcmQYAiABKAlCLbpIKnIoEAgYZDIiXig/PS4qW2Etel0pKD89LipbQS1aXSkoPz0uKlxkKS4rJCpzCgpVc2VyU3RhdHVzEhsKF1VTRVJfU1RBVFVTX1VOU1BFQ0lGSUVEEAASFgoSVVNFUl9TVEFUVVNfQUNUSVZFEAESGAoUVVNFUl9TVEFUVVNfSU5BQ1RJVkUQAhIWChJVU0VSX1NUQVRVU19CQU5ORUQQA2IGcHJvdG8z", [file_buf_validate_validate]);

/**
 * User represents a user in the system with validation rules
 *
 * @generated from message example.v1.User
 */
export type User = Message<"example.v1.User"> & {
  /**
   * ID must be a valid UUID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Email must be a valid email address
   *
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * Username must be between 3 and 20 characters
   *
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * Age must be between 18 and 120
   *
   * @generated from field: int32 age = 4;
   */
  age: number;

  /**
   * Status must be one of the allowed values
   *
   * @generated from field: example.v1.UserStatus status = 5;
   */
  status: UserStatus;

  /**
   * Tags is optional but if provided, must have between 1 and 10 items
   *
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];

  /**
   * Profile is optional but if provided, must be valid
   *
   * @generated from field: example.v1.Profile profile = 7;
   */
  profile?: Profile;
};

/**
 * Describes the message example.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_example_v1_user, 0);

/**
 * @generated from message example.v1.Profile
 */
export type Profile = Message<"example.v1.Profile"> & {
  /**
   * Bio is optional but if provided, must be <= 500 characters
   *
   * @generated from field: string bio = 1;
   */
  bio: string;

  /**
   * Website must be a valid URL if provided
   *
   * @generated from field: string website = 2;
   */
  website: string;

  /**
   * Phone number must match a simple pattern if provided
   *
   * @generated from field: string phone = 3;
   */
  phone: string;
};

/**
 * Describes the message example.v1.Profile.
 * Use `create(ProfileSchema)` to create a new message.
 */
export const ProfileSchema: GenMessage<Profile> = /*@__PURE__*/
  messageDesc(file_example_v1_user, 1);

/**
 * CreateUserRequest validates the user creation request
 *
 * @generated from message example.v1.CreateUserRequest
 */
export type CreateUserRequest = Message<"example.v1.CreateUserRequest"> & {
  /**
   * User must be provided and valid
   *
   * @generated from field: example.v1.User user = 1;
   */
  user?: User;

  /**
   * Password must be strong (min 8 chars, must contain uppercase, lowercase, and digit)
   *
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message example.v1.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export const CreateUserRequestSchema: GenMessage<CreateUserRequest> = /*@__PURE__*/
  messageDesc(file_example_v1_user, 2);

/**
 * @generated from enum example.v1.UserStatus
 */
export enum UserStatus {
  /**
   * @generated from enum value: USER_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_STATUS_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: USER_STATUS_INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: USER_STATUS_BANNED = 3;
   */
  BANNED = 3,
}

/**
 * Describes the enum example.v1.UserStatus.
 */
export const UserStatusSchema: GenEnum<UserStatus> = /*@__PURE__*/
  enumDesc(file_example_v1_user, 0);

