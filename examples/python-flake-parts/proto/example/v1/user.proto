syntax = "proto3";

package example.v1;

import "google/protobuf/timestamp.proto";

// User service for managing user operations
service UserService {
  // Create a new user
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  
  // Get user by ID
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  
  // List all users
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  
  // Update user information
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  
  // Delete a user
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
}

// User message representing a user entity
message User {
  // Unique user identifier
  string id = 1;
  
  // User's email address
  string email = 2;
  
  // User's display name
  string name = 3;
  
  // User's age
  int32 age = 4;
  
  // User status
  UserStatus status = 5;
  
  // Account creation timestamp
  google.protobuf.Timestamp created_at = 6;
  
  // Last update timestamp
  google.protobuf.Timestamp updated_at = 7;
  
  // User preferences
  UserPreferences preferences = 8;
}

// User status enumeration
enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_INACTIVE = 2;
  USER_STATUS_SUSPENDED = 3;
}

// User preferences message
message UserPreferences {
  // Email notifications enabled
  bool email_notifications = 1;
  
  // SMS notifications enabled
  bool sms_notifications = 2;
  
  // Preferred language code (ISO 639-1)
  string language = 3;
  
  // Preferred timezone
  string timezone = 4;
}

// Request messages
message CreateUserRequest {
  string email = 1;
  string name = 2;
  int32 age = 3;
  UserPreferences preferences = 4;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message ListUsersRequest {
  // Maximum number of users to return
  int32 page_size = 1;
  
  // Page token for pagination
  string page_token = 2;
  
  // Filter by user status
  UserStatus status_filter = 3;
}

message ListUsersResponse {
  repeated User users = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

message UpdateUserRequest {
  string id = 1;
  string email = 2;
  string name = 3;
  int32 age = 4;
  UserStatus status = 5;
  UserPreferences preferences = 6;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}