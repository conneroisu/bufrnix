// Code generated by protoc-gen-struct-transformer, version: <dev>. DO NOT EDIT.
// source file: example/v1/product.proto
// source package: example.v1

package transform
// field skipped: internal_field
func PbToProductModelPtr(src *examplev1.Product, opts ...TransformParam) *models.ProductModel {
	if src == nil {
		return nil
	}

	d := PbToProductModel(*src, opts...)
	return &d
}

func PbToProductModelPtrList(src []*examplev1.Product, opts ...TransformParam) []*models.ProductModel {
	resp := make([]*models.ProductModel, len(src))

	for i, s := range src {
		resp[i] = PbToProductModelPtr(s, opts...)
	}

	return resp
}

func PbToProductModelPtrVal(src *examplev1.Product, opts ...TransformParam) models.ProductModel {
	if src == nil {
		return models.ProductModel{}
	}

	return PbToProductModel(*src, opts...)
}

func PbToProductModelPtrValList(src []*examplev1.Product, opts ...TransformParam) []models.ProductModel {
	resp := make([]models.ProductModel, len(src))

	for i, s := range src {
		resp[i] = PbToProductModel(*s)
		}

	return resp
}

// PbToProductModelList is DEPRECATED. Use PbToProductModelPtrValList instead.
func PbToProductModelList(src []*examplev1.Product, opts ...TransformParam) []models.ProductModel {
	return PbToProductModelPtrValList(src)
}

func PbToProductModel(src examplev1.Product, opts ...TransformParam) models.ProductModel {
	s := models.ProductModel{
			ID: src.Id,
			Name: src.Name,
			Description: src.Description,
			Price: src.Price,
			Stock: src.StockQuantity,
			Tags: src.Tags,
	}

	applyOptions(opts...)







	return s
}

func PbToProductModelValPtr(src examplev1.Product, opts ...TransformParam) *models.ProductModel {
	d := PbToProductModel(src, opts...)
	return &d
}

func PbToProductModelValList(src []examplev1.Product, opts ...TransformParam) []models.ProductModel {
	resp := make([]models.ProductModel, len(src))

	for i, s := range src {
		resp[i] = PbToProductModel(s, opts...)
	}

	return resp
}

func ProductModelToPbPtr(src *models.ProductModel, opts ...TransformParam) *examplev1.Product {
	if src == nil {
		return nil
	}

	d := ProductModelToPb(*src, opts...)
	return &d
}

func ProductModelToPbPtrList(src []*models.ProductModel, opts ...TransformParam) []*examplev1.Product {
	resp := make([]*examplev1.Product, len(src))

	for i, s := range src {
		resp[i] = ProductModelToPbPtr(s, opts...)
	}

	return resp
}

func ProductModelToPbPtrVal(src *models.ProductModel, opts ...TransformParam) examplev1.Product {
	if src == nil {
		return examplev1.Product{}
	}

	return ProductModelToPb(*src, opts...)
}

func ProductModelToPbValPtrList(src []models.ProductModel, opts ...TransformParam) []*examplev1.Product {
	resp := make([]*examplev1.Product, len(src))

	for i, s := range src {
		g := ProductModelToPb(s, opts...)
		resp[i] = &g
		}

	return resp
}

// ProductModelToPbList is DEPRECATED. Use ProductModelToPbValPtrList instead.
func ProductModelToPbList(src []models.ProductModel, opts ...TransformParam) []*examplev1.Product {
	return ProductModelToPbValPtrList(src)
}

func ProductModelToPb(src models.ProductModel, opts ...TransformParam) examplev1.Product {
	s := examplev1.Product{
			Id: src.ID,
			Name: src.Name,
			Description: src.Description,
			Price: src.Price,
			StockQuantity: src.Stock,
			Tags: src.Tags,
	}

	applyOptions(opts...)







	return s
}

func ProductModelToPbValPtr(src models.ProductModel, opts ...TransformParam) *examplev1.Product {
	d := ProductModelToPb(src, opts...)
	return &d
}

func ProductModelToPbValList(src []models.ProductModel, opts ...TransformParam) []examplev1.Product {
	resp := make([]examplev1.Product, len(src))

	for i, s := range src {
		resp[i] = ProductModelToPb(s, opts...)
	}

	return resp
}

func PbToProductListModelPtr(src *examplev1.ProductList, opts ...TransformParam) *models.ProductListModel {
	if src == nil {
		return nil
	}

	d := PbToProductListModel(*src, opts...)
	return &d
}

func PbToProductListModelPtrList(src []*examplev1.ProductList, opts ...TransformParam) []*models.ProductListModel {
	resp := make([]*models.ProductListModel, len(src))

	for i, s := range src {
		resp[i] = PbToProductListModelPtr(s, opts...)
	}

	return resp
}

func PbToProductListModelPtrVal(src *examplev1.ProductList, opts ...TransformParam) models.ProductListModel {
	if src == nil {
		return models.ProductListModel{}
	}

	return PbToProductListModel(*src, opts...)
}

func PbToProductListModelPtrValList(src []*examplev1.ProductList, opts ...TransformParam) []models.ProductListModel {
	resp := make([]models.ProductListModel, len(src))

	for i, s := range src {
		resp[i] = PbToProductListModel(*s)
		}

	return resp
}

// PbToProductListModelList is DEPRECATED. Use PbToProductListModelPtrValList instead.
func PbToProductListModelList(src []*examplev1.ProductList, opts ...TransformParam) []models.ProductListModel {
	return PbToProductListModelPtrValList(src)
}

func PbToProductListModel(src examplev1.ProductList, opts ...TransformParam) models.ProductListModel {
	s := models.ProductListModel{
			Products:  PbToProductModelPtrValList(src.Products , opts...),
			TotalCount: src.TotalCount,
			NextPageToken: src.NextPageToken,
	}

	applyOptions(opts...)




	return s
}

func PbToProductListModelValPtr(src examplev1.ProductList, opts ...TransformParam) *models.ProductListModel {
	d := PbToProductListModel(src, opts...)
	return &d
}

func PbToProductListModelValList(src []examplev1.ProductList, opts ...TransformParam) []models.ProductListModel {
	resp := make([]models.ProductListModel, len(src))

	for i, s := range src {
		resp[i] = PbToProductListModel(s, opts...)
	}

	return resp
}

func ProductListModelToPbPtr(src *models.ProductListModel, opts ...TransformParam) *examplev1.ProductList {
	if src == nil {
		return nil
	}

	d := ProductListModelToPb(*src, opts...)
	return &d
}

func ProductListModelToPbPtrList(src []*models.ProductListModel, opts ...TransformParam) []*examplev1.ProductList {
	resp := make([]*examplev1.ProductList, len(src))

	for i, s := range src {
		resp[i] = ProductListModelToPbPtr(s, opts...)
	}

	return resp
}

func ProductListModelToPbPtrVal(src *models.ProductListModel, opts ...TransformParam) examplev1.ProductList {
	if src == nil {
		return examplev1.ProductList{}
	}

	return ProductListModelToPb(*src, opts...)
}

func ProductListModelToPbValPtrList(src []models.ProductListModel, opts ...TransformParam) []*examplev1.ProductList {
	resp := make([]*examplev1.ProductList, len(src))

	for i, s := range src {
		g := ProductListModelToPb(s, opts...)
		resp[i] = &g
		}

	return resp
}

// ProductListModelToPbList is DEPRECATED. Use ProductListModelToPbValPtrList instead.
func ProductListModelToPbList(src []models.ProductListModel, opts ...TransformParam) []*examplev1.ProductList {
	return ProductListModelToPbValPtrList(src)
}

func ProductListModelToPb(src models.ProductListModel, opts ...TransformParam) examplev1.ProductList {
	s := examplev1.ProductList{
			Products:  ProductModelToPbValPtrList(src.Products , opts...),
			TotalCount: src.TotalCount,
			NextPageToken: src.NextPageToken,
	}

	applyOptions(opts...)




	return s
}

func ProductListModelToPbValPtr(src models.ProductListModel, opts ...TransformParam) *examplev1.ProductList {
	d := ProductListModelToPb(src, opts...)
	return &d
}

func ProductListModelToPbValList(src []models.ProductListModel, opts ...TransformParam) []examplev1.ProductList {
	resp := make([]examplev1.ProductList, len(src))

	for i, s := range src {
		resp[i] = ProductListModelToPb(s, opts...)
	}

	return resp
}

