<?php
/**
 * Example gRPC Client Template
 * Generated by Bufrnix
 */
namespace App\Proto\Client;

use App\Proto\Services\ExampleServiceClient;
use Grpc\ChannelCredentials;

class ExampleClient
{
    private ExampleServiceClient $client;
    private array $options;

    public function __construct(string $host = 'localhost:50051', array $options = [])
    {
        $this->options = array_merge([
            'credentials' => ChannelCredentials::createInsecure(),
            'timeout' => 30000000, // 30 seconds in microseconds
        ], $options);

        $this->client = new ExampleServiceClient($host, $this->options);
    }

    /**
     * Example method - replace with your actual service methods
     */
    public function callService($request)
    {
        list($response, $status) = $this->client->YourMethod($request)->wait();

        if ($status->code !== \Grpc\STATUS_OK) {
            throw new \RuntimeException(sprintf(
                'gRPC call failed with status %d: %s',
                $status->code,
                $status->details
            ));
        }

        return $response;
    }

    /**
     * Example streaming method
     */
    public function streamingCall($requests)
    {
        $call = $this->client->YourStreamingMethod();

        foreach ($requests as $request) {
            $call->write($request);
        }

        $call->writesDone();

        $responses = [];
        while ($response = $call->read()) {
            $responses[] = $response;
        }

        return $responses;
    }
}
